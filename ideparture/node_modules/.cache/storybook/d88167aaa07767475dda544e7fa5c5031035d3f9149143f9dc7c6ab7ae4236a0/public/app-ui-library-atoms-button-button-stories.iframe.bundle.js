(self["webpackChunkideparture"] = self["webpackChunkideparture"] || []).push([["app-ui-library-atoms-button-button-stories"],{

/***/ "./src/app/ui-library/atoms/button/button.component.ts":
/*!*************************************************************!*\
  !*** ./src/app/ui-library/atoms/button/button.component.ts ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ButtonComponent: () => (/* binding */ ButtonComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");
/* harmony import */ var _button_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./button.component.html?ngResource */ "./src/app/ui-library/atoms/button/button.component.html?ngResource");
/* harmony import */ var _button_component_css_ngResource__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./button.component.css?ngResource */ "./src/app/ui-library/atoms/button/button.component.css?ngResource");
/* harmony import */ var _button_component_css_ngResource__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_button_component_css_ngResource__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2022/core.mjs");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm2022/common.mjs");
/**
 * BUTTON
 * An Atom.
 *
 * iDeparture Design System v.3.0.1
 */




 // Import CommonModule
let ButtonComponent = class ButtonComponent {
  buttonClick = new _angular_core__WEBPACK_IMPORTED_MODULE_2__.EventEmitter();
  text = '';
  icon = null;
  styleType = 'text-only';
  backgroundColor;
  size;
  static propDecorators = {
    buttonClick: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Output
    }],
    text: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
    }],
    icon: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
    }],
    styleType: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
    }],
    backgroundColor: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
    }],
    size: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
    }]
  };
};
ButtonComponent = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_2__.Component)({
  selector: 'app-button',
  standalone: true,
  imports: [_angular_common__WEBPACK_IMPORTED_MODULE_4__.CommonModule],
  // Add CommonModule to imports
  template: _button_component_html_ngResource__WEBPACK_IMPORTED_MODULE_0__,
  styles: [(_button_component_css_ngResource__WEBPACK_IMPORTED_MODULE_1___default())]
})], ButtonComponent);


/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/api.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/***/ ((module) => {

"use strict";


/*
  MIT License http://www.opensource.org/licenses/mit-license.php
  Author Tobias Koppers @sokra
*/
module.exports = function (cssWithMappingToString) {
  var list = [];

  // return the list of modules as css string
  list.toString = function toString() {
    return this.map(function (item) {
      var content = "";
      var needLayer = typeof item[5] !== "undefined";
      if (item[4]) {
        content += "@supports (".concat(item[4], ") {");
      }
      if (item[2]) {
        content += "@media ".concat(item[2], " {");
      }
      if (needLayer) {
        content += "@layer".concat(item[5].length > 0 ? " ".concat(item[5]) : "", " {");
      }
      content += cssWithMappingToString(item);
      if (needLayer) {
        content += "}";
      }
      if (item[2]) {
        content += "}";
      }
      if (item[4]) {
        content += "}";
      }
      return content;
    }).join("");
  };

  // import a list of modules into the list
  list.i = function i(modules, media, dedupe, supports, layer) {
    if (typeof modules === "string") {
      modules = [[null, modules, undefined]];
    }
    var alreadyImportedModules = {};
    if (dedupe) {
      for (var k = 0; k < this.length; k++) {
        var id = this[k][0];
        if (id != null) {
          alreadyImportedModules[id] = true;
        }
      }
    }
    for (var _k = 0; _k < modules.length; _k++) {
      var item = [].concat(modules[_k]);
      if (dedupe && alreadyImportedModules[item[0]]) {
        continue;
      }
      if (typeof layer !== "undefined") {
        if (typeof item[5] === "undefined") {
          item[5] = layer;
        } else {
          item[1] = "@layer".concat(item[5].length > 0 ? " ".concat(item[5]) : "", " {").concat(item[1], "}");
          item[5] = layer;
        }
      }
      if (media) {
        if (!item[2]) {
          item[2] = media;
        } else {
          item[1] = "@media ".concat(item[2], " {").concat(item[1], "}");
          item[2] = media;
        }
      }
      if (supports) {
        if (!item[4]) {
          item[4] = "".concat(supports);
        } else {
          item[1] = "@supports (".concat(item[4], ") {").concat(item[1], "}");
          item[4] = supports;
        }
      }
      list.push(item);
    }
  };
  return list;
};

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/noSourceMaps.js":
/*!**************************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/noSourceMaps.js ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";


module.exports = function (i) {
  return i[1];
};

/***/ }),

/***/ "./src/app/ui-library/atoms/button/button.stories.ts":
/*!***********************************************************!*\
  !*** ./src/app/ui-library/atoms/button/button.stories.ts ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Filled: () => (/* binding */ Filled),
/* harmony export */   Large: () => (/* binding */ Large),
/* harmony export */   Outline: () => (/* binding */ Outline),
/* harmony export */   Small: () => (/* binding */ Small),
/* harmony export */   TextIcon: () => (/* binding */ TextIcon),
/* harmony export */   TextOnly: () => (/* binding */ TextOnly),
/* harmony export */   __namedExportsOrder: () => (/* binding */ __namedExportsOrder),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _button_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./button.component */ "./src/app/ui-library/atoms/button/button.component.ts");
/**
 * BUTTON
 * An Atom.
 *
 * iDeparture Design System v.3.0.1
 */

const meta = {
  title: 'Atoms/Button',
  component: _button_component__WEBPACK_IMPORTED_MODULE_0__.ButtonComponent,
  tags: ['autodocs'],
  argTypes: {
    styleType: {
      control: {
        type: 'select'
      },
      options: ['text-only', 'text-icon', 'filled', 'outline'],
      description: 'Defines the button style (text-only, text-icon, filled, or outline)'
    },
    text: {
      control: {
        type: 'text'
      },
      description: 'Button text'
    },
    icon: {
      control: {
        type: 'text'
      },
      description: 'Optional icon for text-icon button (use valid SVG icon reference)'
    },
    backgroundColor: {
      control: 'color',
      description: 'Optional background color for the button'
    },
    size: {
      control: {
        type: 'select'
      },
      options: ['small', 'large'],
      description: 'Button size (small or large)'
    },
    buttonClick: {
      action: 'clicked'
    }
  },
  args: {
    text: 'Button',
    styleType: 'text-only',
    backgroundColor: 'transparent'
  }
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (meta);
// Text-Only Button Story
const TextOnly = {
  args: {
    text: 'Sign Up Here!',
    styleType: 'text-only'
  }
};
// Text + Icon Button Story
const TextIcon = {
  args: {
    text: 'Save',
    styleType: 'text-icon',
    icon: 'save-icon' // Replace with actual SVG reference
  }
};
// Filled Button Story
const Filled = {
  args: {
    text: 'Submit',
    styleType: 'filled',
    backgroundColor: '#1B2E40' // Primary color
  }
};
// Outline Button Story
const Outline = {
  args: {
    text: 'Cancel',
    styleType: 'outline',
    backgroundColor: 'transparent'
  }
};
// Large Button Story
const Large = {
  args: {
    text: 'Large Button',
    size: 'large',
    styleType: 'filled'
  }
};
// Small Button Story
const Small = {
  args: {
    text: 'Small Button',
    size: 'small',
    styleType: 'text-only'
  }
};
;
const __namedExportsOrder = ["TextOnly", "TextIcon", "Filled", "Outline", "Large", "Small"];
TextOnly.parameters = {
  ...TextOnly.parameters,
  docs: {
    ...TextOnly.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    text: 'Sign Up Here!',\n    styleType: 'text-only'\n  }\n}",
      ...TextOnly.parameters?.docs?.source
    }
  }
};
TextIcon.parameters = {
  ...TextIcon.parameters,
  docs: {
    ...TextIcon.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    text: 'Save',\n    styleType: 'text-icon',\n    icon: 'save-icon' // Replace with actual SVG reference\n  }\n}",
      ...TextIcon.parameters?.docs?.source
    }
  }
};
Filled.parameters = {
  ...Filled.parameters,
  docs: {
    ...Filled.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    text: 'Submit',\n    styleType: 'filled',\n    backgroundColor: '#1B2E40' // Primary color\n  }\n}",
      ...Filled.parameters?.docs?.source
    }
  }
};
Outline.parameters = {
  ...Outline.parameters,
  docs: {
    ...Outline.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    text: 'Cancel',\n    styleType: 'outline',\n    backgroundColor: 'transparent'\n  }\n}",
      ...Outline.parameters?.docs?.source
    }
  }
};
Large.parameters = {
  ...Large.parameters,
  docs: {
    ...Large.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    text: 'Large Button',\n    size: 'large',\n    styleType: 'filled'\n  }\n}",
      ...Large.parameters?.docs?.source
    }
  }
};
Small.parameters = {
  ...Small.parameters,
  docs: {
    ...Small.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    text: 'Small Button',\n    size: 'small',\n    styleType: 'text-only'\n  }\n}",
      ...Small.parameters?.docs?.source
    }
  }
};

/***/ }),

/***/ "./src/app/ui-library/atoms/button/button.component.css?ngResource":
/*!*************************************************************************!*\
  !*** ./src/app/ui-library/atoms/button/button.component.css?ngResource ***!
  \*************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Imports
var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ = __webpack_require__(/*! ../../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js */ "./node_modules/css-loader/dist/runtime/noSourceMaps.js");
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../../../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js");
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, ``, ""]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___.toString();


/***/ }),

/***/ "./src/app/ui-library/atoms/button/button.component.html?ngResource":
/*!**************************************************************************!*\
  !*** ./src/app/ui-library/atoms/button/button.component.html?ngResource ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "<!-- button.component.html -->\n<button\n  class=\"w-full text-sm\"\n  [ngClass]=\"{\n    'text-left text-accent-500 bg-transparent hover:text-accent-300': styleType === 'text-only',\n    'flex items-center justify-center bg-secondary-600 hover:bg-secondary-500 text-white font-bold py-1 px-6 rounded transition-all': styleType === 'filled',\n    'border border-accent-500 hover:bg-accent-500 hover:text-white': styleType === 'outline',\n    'flex items-center': styleType === 'text-icon'\n  }\"\n  (click)=\"buttonClick.emit()\">\n  \n  <ng-container *ngIf=\"icon\">\n    <svg class=\"size-6 text-white\" fill=\"none\" viewBox=\"0 0 26 26\" stroke=\"currentColor\" stroke-width=\"2\">\n      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\n    </svg>\n  </ng-container>\n\n  <span *ngIf=\"text\">{{ text }}</span>\n</button>\n";

/***/ })

}]);
//# sourceMappingURL=app-ui-library-atoms-button-button-stories.iframe.bundle.js.map