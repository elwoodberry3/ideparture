{"version":3,"file":"app-ui-library-atoms-button-button-stories.eb66ea98f8570896288a.hot-update.js","mappingssources":["webpack://ideparture/./src/app/ui-library/atoms/button/button.stories.ts"],"sourcesContent":["/**\n * BUTTON\n * An Atom.\n *\n * iDeparture Design System v.3.0.1\n */\nimport { fn } from '@storybook/test';\nimport { ButtonComponent } from './button.component';\nconst meta = {\n    title: 'Atoms/Button',\n    component: ButtonComponent,\n    tags: ['autodocs'],\n    argTypes: {\n        text: {\n            control: 'text',\n            description: 'The text displayed on the button',\n        },\n        icon: {\n            control: 'text',\n            description: 'Optional icon to display alongside the text',\n        },\n        styleType: {\n            control: {\n                type: 'select',\n                options: ['text-only', 'text-icon', 'filled', 'outline'],\n            },\n            description: 'Defines the button style type',\n        },\n        backgroundColor: {\n            control: 'color',\n            description: 'Background color of the button',\n            if: { arg: 'styleType', eq: 'filled' }, // Optional: only show for filled style\n        },\n        // Updated to the actual output event name\n        buttonClick: {\n            action: 'clicked',\n            description: 'Event fired when the button is clicked',\n        },\n    },\n};\nexport default meta;\n// Text Only Button\nexport const TextOnly = {\n    args: {\n        text: 'Click Me',\n        styleType: 'text-only',\n        buttonClick: fn(), // You can add the action here if needed\n    },\n};\n// Text + Icon Button\nexport const TextWithIcon = {\n    args: {\n        text: 'Settings',\n        icon: '⚙️', // Replace this with an actual icon as needed\n        styleType: 'text-icon',\n        buttonClick: fn(),\n    },\n};\n// Text (All Caps), Filled Button\nexport const FilledAllCaps = {\n    args: {\n        text: 'SUBMIT',\n        styleType: 'filled',\n        backgroundColor: '#007bff', // Example color\n        buttonClick: fn(),\n    },\n};\n// Text (Lowercase), Outline Button\nexport const LowercaseOutline = {\n    args: {\n        text: 'cancel',\n        styleType: 'outline',\n        buttonClick: fn(),\n    },\n};\n// Large Button\nexport const Large = {\n    args: {\n        size: 'large',\n        text: 'Large Button',\n        styleType: 'filled',\n        backgroundColor: '#007bff', // Example color\n        buttonClick: fn(),\n    },\n};\n// Small Button\nexport const Small = {\n    args: {\n        size: 'small',\n        text: \"Ideparture\",\n        styleType: 'outline',\n        buttonClick: fn(),\n        icon: \"What\"\n    },\n};\n"],"names":[],"sourceRoot":""}