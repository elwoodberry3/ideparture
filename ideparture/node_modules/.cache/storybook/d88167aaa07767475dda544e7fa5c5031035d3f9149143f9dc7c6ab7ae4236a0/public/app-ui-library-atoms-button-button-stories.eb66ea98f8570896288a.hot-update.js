"use strict";
self["webpackHotUpdateideparture"]("app-ui-library-atoms-button-button-stories",{

/***/ "./src/app/ui-library/atoms/button/button.stories.ts":
/*!***********************************************************!*\
  !*** ./src/app/ui-library/atoms/button/button.stories.ts ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   FilledAllCaps: () => (/* binding */ FilledAllCaps),
/* harmony export */   Large: () => (/* binding */ Large),
/* harmony export */   LowercaseOutline: () => (/* binding */ LowercaseOutline),
/* harmony export */   Small: () => (/* binding */ Small),
/* harmony export */   TextOnly: () => (/* binding */ TextOnly),
/* harmony export */   TextWithIcon: () => (/* binding */ TextWithIcon),
/* harmony export */   __namedExportsOrder: () => (/* binding */ __namedExportsOrder),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _storybook_test__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @storybook/test */ "./node_modules/@storybook/test/dist/index.mjs");
/* harmony import */ var _button_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./button.component */ "./src/app/ui-library/atoms/button/button.component.ts");
/**
 * BUTTON
 * An Atom.
 *
 * iDeparture Design System v.3.0.1
 */


const meta = {
  title: 'Atoms/Button',
  component: _button_component__WEBPACK_IMPORTED_MODULE_1__.ButtonComponent,
  tags: ['autodocs'],
  argTypes: {
    text: {
      control: 'text',
      description: 'The text displayed on the button'
    },
    icon: {
      control: 'text',
      description: 'Optional icon to display alongside the text'
    },
    styleType: {
      control: {
        type: 'select',
        options: ['text-only', 'text-icon', 'filled', 'outline']
      },
      description: 'Defines the button style type'
    },
    backgroundColor: {
      control: 'color',
      description: 'Background color of the button',
      if: {
        arg: 'styleType',
        eq: 'filled'
      } // Optional: only show for filled style
    },
    // Updated to the actual output event name
    buttonClick: {
      action: 'clicked',
      description: 'Event fired when the button is clicked'
    }
  }
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (meta);
// Text Only Button
const TextOnly = {
  args: {
    text: 'Click Me',
    styleType: 'text-only',
    buttonClick: (0,_storybook_test__WEBPACK_IMPORTED_MODULE_0__.fn)() // You can add the action here if needed
  }
};
// Text + Icon Button
const TextWithIcon = {
  args: {
    text: 'Settings',
    icon: '⚙️',
    // Replace this with an actual icon as needed
    styleType: 'text-icon',
    buttonClick: (0,_storybook_test__WEBPACK_IMPORTED_MODULE_0__.fn)()
  }
};
// Text (All Caps), Filled Button
const FilledAllCaps = {
  args: {
    text: 'SUBMIT',
    styleType: 'filled',
    backgroundColor: '#007bff',
    // Example color
    buttonClick: (0,_storybook_test__WEBPACK_IMPORTED_MODULE_0__.fn)()
  }
};
// Text (Lowercase), Outline Button
const LowercaseOutline = {
  args: {
    text: 'cancel',
    styleType: 'outline',
    buttonClick: (0,_storybook_test__WEBPACK_IMPORTED_MODULE_0__.fn)()
  }
};
// Large Button
const Large = {
  args: {
    size: 'large',
    text: 'Large Button',
    styleType: 'filled',
    backgroundColor: '#007bff',
    // Example color
    buttonClick: (0,_storybook_test__WEBPACK_IMPORTED_MODULE_0__.fn)()
  }
};
// Small Button
const Small = {
  args: {
    size: 'small',
    text: "Ideparture",
    styleType: 'outline',
    buttonClick: (0,_storybook_test__WEBPACK_IMPORTED_MODULE_0__.fn)(),
    icon: "What"
  }
};
;
const __namedExportsOrder = ["TextOnly", "TextWithIcon", "FilledAllCaps", "LowercaseOutline", "Large", "Small"];
TextOnly.parameters = {
  ...TextOnly.parameters,
  docs: {
    ...TextOnly.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    text: 'Click Me',\n    styleType: 'text-only',\n    buttonClick: fn() // You can add the action here if needed\n  }\n}",
      ...TextOnly.parameters?.docs?.source
    }
  }
};
TextWithIcon.parameters = {
  ...TextWithIcon.parameters,
  docs: {
    ...TextWithIcon.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    text: 'Settings',\n    icon: '\u2699\uFE0F',\n    // Replace this with an actual icon as needed\n    styleType: 'text-icon',\n    buttonClick: fn()\n  }\n}",
      ...TextWithIcon.parameters?.docs?.source
    }
  }
};
FilledAllCaps.parameters = {
  ...FilledAllCaps.parameters,
  docs: {
    ...FilledAllCaps.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    text: 'SUBMIT',\n    styleType: 'filled',\n    backgroundColor: '#007bff',\n    // Example color\n    buttonClick: fn()\n  }\n}",
      ...FilledAllCaps.parameters?.docs?.source
    }
  }
};
LowercaseOutline.parameters = {
  ...LowercaseOutline.parameters,
  docs: {
    ...LowercaseOutline.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    text: 'cancel',\n    styleType: 'outline',\n    buttonClick: fn()\n  }\n}",
      ...LowercaseOutline.parameters?.docs?.source
    }
  }
};
Large.parameters = {
  ...Large.parameters,
  docs: {
    ...Large.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    size: 'large',\n    text: 'Large Button',\n    styleType: 'filled',\n    backgroundColor: '#007bff',\n    // Example color\n    buttonClick: fn()\n  }\n}",
      ...Large.parameters?.docs?.source
    }
  }
};
Small.parameters = {
  ...Small.parameters,
  docs: {
    ...Small.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    size: 'small',\n    text: \"Ideparture\",\n    styleType: 'outline',\n    buttonClick: fn(),\n    icon: \"What\"\n  }\n}",
      ...Small.parameters?.docs?.source
    }
  }
};

/***/ })

});
//# sourceMappingURL=app-ui-library-atoms-button-button-stories.eb66ea98f8570896288a.hot-update.js.map