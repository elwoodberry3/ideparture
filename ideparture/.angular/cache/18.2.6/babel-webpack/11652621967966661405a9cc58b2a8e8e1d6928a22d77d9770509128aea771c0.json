{"ast":null,"code":"/**\n * BUTTON\n * An Atom.\n *\n * iDeparture Design System v.3.0.1\n */\nimport { ButtonComponent } from './button.component';\nconst meta = {\n  title: 'Atoms/Button',\n  component: ButtonComponent,\n  tags: ['autodocs'],\n  argTypes: {\n    text: {\n      control: 'text',\n      description: 'The text displayed on the button'\n    },\n    icon: {\n      control: 'text',\n      description: 'Optional icon to display alongside the text'\n    },\n    styleType: {\n      control: {\n        type: 'select',\n        options: ['text-only', 'text-icon', 'filled', 'outline']\n      },\n      description: 'Defines the button style type'\n    },\n    // Ensure these properties exist in your ButtonComponent\n    backgroundColor: {\n      control: 'color',\n      description: 'Background color of the button',\n      if: {\n        arg: 'styleType',\n        eq: 'filled'\n      } // Optional: only show for filled style\n    },\n    // You might want to add size if it's a property in ButtonComponent\n    size: {\n      control: {\n        type: 'select',\n        options: ['small', 'large']\n      },\n      description: 'Defines the button size'\n    },\n    onClick: {\n      action: 'clicked',\n      description: 'Event fired when the button is clicked'\n    }\n  }\n};\nexport default meta;\n// Text Only Button\nexport const TextOnly = {\n  args: {\n    text: 'Click Me',\n    styleType: 'text-only'\n  }\n};\n// Text + Icon Button\nexport const TextWithIcon = {\n  args: {\n    text: 'Settings',\n    icon: '⚙️',\n    // Replace this with an actual icon as needed\n    styleType: 'text-icon'\n  }\n};\n// Text (All Caps), Filled Button\nexport const FilledAllCaps = {\n  args: {\n    text: 'SUBMIT',\n    styleType: 'filled',\n    backgroundColor: '#007bff' // Example color\n  }\n};\n// Text (Lowercase), Outline Button\nexport const LowercaseOutline = {\n  args: {\n    text: 'cancel',\n    styleType: 'outline'\n  }\n};\n// Large Button\nexport const Large = {\n  args: {\n    size: 'large',\n    text: 'Large Button',\n    styleType: 'filled',\n    backgroundColor: '#007bff' // Example color\n  }\n};\n// Small Button\nexport const Small = {\n  args: {\n    size: 'small',\n    text: 'Small Button',\n    styleType: 'outline'\n  }\n};","map":{"version":3,"names":["ButtonComponent","meta","title","component","tags","argTypes","text","control","description","icon","styleType","type","options","backgroundColor","if","arg","eq","size","onClick","action","TextOnly","args","TextWithIcon","FilledAllCaps","LowercaseOutline","Large","Small"],"sources":["/Users/adbyrd/Documents/Adbryd.Local/elwood.employment.local/github/ideparture/ideparture/src/app/ui-library/atoms/button/button.stories.ts"],"sourcesContent":["/**\n * BUTTON\n * An Atom.\n *\n * iDeparture Design System v.3.0.1\n */\nimport { ButtonComponent } from './button.component';\nconst meta = {\n    title: 'Atoms/Button',\n    component: ButtonComponent,\n    tags: ['autodocs'],\n    argTypes: {\n        text: {\n            control: 'text',\n            description: 'The text displayed on the button',\n        },\n        icon: {\n            control: 'text',\n            description: 'Optional icon to display alongside the text',\n        },\n        styleType: {\n            control: {\n                type: 'select',\n                options: ['text-only', 'text-icon', 'filled', 'outline'],\n            },\n            description: 'Defines the button style type',\n        },\n        // Ensure these properties exist in your ButtonComponent\n        backgroundColor: {\n            control: 'color',\n            description: 'Background color of the button',\n            if: { arg: 'styleType', eq: 'filled' }, // Optional: only show for filled style\n        },\n        // You might want to add size if it's a property in ButtonComponent\n        size: {\n            control: {\n                type: 'select',\n                options: ['small', 'large'],\n            },\n            description: 'Defines the button size',\n        },\n        onClick: {\n            action: 'clicked',\n            description: 'Event fired when the button is clicked',\n        },\n    },\n};\nexport default meta;\n// Text Only Button\nexport const TextOnly = {\n    args: {\n        text: 'Click Me',\n        styleType: 'text-only',\n    },\n};\n// Text + Icon Button\nexport const TextWithIcon = {\n    args: {\n        text: 'Settings',\n        icon: '⚙️', // Replace this with an actual icon as needed\n        styleType: 'text-icon',\n    },\n};\n// Text (All Caps), Filled Button\nexport const FilledAllCaps = {\n    args: {\n        text: 'SUBMIT',\n        styleType: 'filled',\n        backgroundColor: '#007bff', // Example color\n    },\n};\n// Text (Lowercase), Outline Button\nexport const LowercaseOutline = {\n    args: {\n        text: 'cancel',\n        styleType: 'outline',\n    },\n};\n// Large Button\nexport const Large = {\n    args: {\n        size: 'large',\n        text: 'Large Button',\n        styleType: 'filled',\n        backgroundColor: '#007bff', // Example color\n    },\n};\n// Small Button\nexport const Small = {\n    args: {\n        size: 'small',\n        text: 'Small Button',\n        styleType: 'outline',\n    },\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,eAAe,QAAQ,oBAAoB;AACpD,MAAMC,IAAI,GAAG;EACTC,KAAK,EAAE,cAAc;EACrBC,SAAS,EAAEH,eAAe;EAC1BI,IAAI,EAAE,CAAC,UAAU,CAAC;EAClBC,QAAQ,EAAE;IACNC,IAAI,EAAE;MACFC,OAAO,EAAE,MAAM;MACfC,WAAW,EAAE;IACjB,CAAC;IACDC,IAAI,EAAE;MACFF,OAAO,EAAE,MAAM;MACfC,WAAW,EAAE;IACjB,CAAC;IACDE,SAAS,EAAE;MACPH,OAAO,EAAE;QACLI,IAAI,EAAE,QAAQ;QACdC,OAAO,EAAE,CAAC,WAAW,EAAE,WAAW,EAAE,QAAQ,EAAE,SAAS;MAC3D,CAAC;MACDJ,WAAW,EAAE;IACjB,CAAC;IACD;IACAK,eAAe,EAAE;MACbN,OAAO,EAAE,OAAO;MAChBC,WAAW,EAAE,gCAAgC;MAC7CM,EAAE,EAAE;QAAEC,GAAG,EAAE,WAAW;QAAEC,EAAE,EAAE;MAAS,CAAC,CAAE;IAC5C,CAAC;IACD;IACAC,IAAI,EAAE;MACFV,OAAO,EAAE;QACLI,IAAI,EAAE,QAAQ;QACdC,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO;MAC9B,CAAC;MACDJ,WAAW,EAAE;IACjB,CAAC;IACDU,OAAO,EAAE;MACLC,MAAM,EAAE,SAAS;MACjBX,WAAW,EAAE;IACjB;EACJ;AACJ,CAAC;AACD,eAAeP,IAAI;AACnB;AACA,OAAO,MAAMmB,QAAQ,GAAG;EACpBC,IAAI,EAAE;IACFf,IAAI,EAAE,UAAU;IAChBI,SAAS,EAAE;EACf;AACJ,CAAC;AACD;AACA,OAAO,MAAMY,YAAY,GAAG;EACxBD,IAAI,EAAE;IACFf,IAAI,EAAE,UAAU;IAChBG,IAAI,EAAE,IAAI;IAAE;IACZC,SAAS,EAAE;EACf;AACJ,CAAC;AACD;AACA,OAAO,MAAMa,aAAa,GAAG;EACzBF,IAAI,EAAE;IACFf,IAAI,EAAE,QAAQ;IACdI,SAAS,EAAE,QAAQ;IACnBG,eAAe,EAAE,SAAS,CAAE;EAChC;AACJ,CAAC;AACD;AACA,OAAO,MAAMW,gBAAgB,GAAG;EAC5BH,IAAI,EAAE;IACFf,IAAI,EAAE,QAAQ;IACdI,SAAS,EAAE;EACf;AACJ,CAAC;AACD;AACA,OAAO,MAAMe,KAAK,GAAG;EACjBJ,IAAI,EAAE;IACFJ,IAAI,EAAE,OAAO;IACbX,IAAI,EAAE,cAAc;IACpBI,SAAS,EAAE,QAAQ;IACnBG,eAAe,EAAE,SAAS,CAAE;EAChC;AACJ,CAAC;AACD;AACA,OAAO,MAAMa,KAAK,GAAG;EACjBL,IAAI,EAAE;IACFJ,IAAI,EAAE,OAAO;IACbX,IAAI,EAAE,cAAc;IACpBI,SAAS,EAAE;EACf;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}