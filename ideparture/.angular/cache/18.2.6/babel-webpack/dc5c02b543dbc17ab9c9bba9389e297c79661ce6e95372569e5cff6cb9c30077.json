{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.computesTemplateSourceFromComponent = exports.computesTemplateFromComponent = exports.formatPropInTemplate = void 0;\nconst NgComponentAnalyzer_1 = require(\"./utils/NgComponentAnalyzer\");\n/**\n * Check if the name matches the criteria for a valid identifier. A valid identifier can only\n * contain letters, digits, underscores, or dollar signs. It cannot start with a digit.\n */\nconst isValidIdentifier = name => /^[a-zA-Z_$][a-zA-Z0-9_$]*$/.test(name);\n/**\n * Returns the property name, if it can be accessed with dot notation. If not, it returns\n * `this['propertyName']`.\n */\nconst formatPropInTemplate = propertyName => isValidIdentifier(propertyName) ? propertyName : `this['${propertyName}']`;\nexports.formatPropInTemplate = formatPropInTemplate;\nconst separateInputsOutputsAttributes = (ngComponentInputsOutputs, props = {}) => {\n  const inputs = ngComponentInputsOutputs.inputs.filter(i => i.templateName in props).map(i => i.templateName);\n  const outputs = ngComponentInputsOutputs.outputs.filter(o => o.templateName in props).map(o => o.templateName);\n  return {\n    inputs,\n    outputs,\n    otherProps: Object.keys(props).filter(k => ![...inputs, ...outputs].includes(k))\n  };\n};\n/**\n * Converts a component into a template with inputs/outputs present in initial props\n *\n * @param component\n * @param initialProps\n * @param innerTemplate\n */\nconst computesTemplateFromComponent = (component, initialProps, innerTemplate = '') => {\n  const ngComponentMetadata = (0, NgComponentAnalyzer_1.getComponentDecoratorMetadata)(component);\n  const ngComponentInputsOutputs = (0, NgComponentAnalyzer_1.getComponentInputsOutputs)(component);\n  if (!ngComponentMetadata.selector) {\n    // Allow to add renderer component when NgComponent selector is undefined\n    return `<ng-container *ngComponentOutlet=\"storyComponent\"></ng-container>`;\n  }\n  const {\n    inputs: initialInputs,\n    outputs: initialOutputs\n  } = separateInputsOutputsAttributes(ngComponentInputsOutputs, initialProps);\n  const templateInputs = initialInputs.length > 0 ? ` ${initialInputs.map(i => `[${i}]=\"${(0, exports.formatPropInTemplate)(i)}\"`).join(' ')}` : '';\n  const templateOutputs = initialOutputs.length > 0 ? ` ${initialOutputs.map(i => `(${i})=\"${(0, exports.formatPropInTemplate)(i)}($event)\"`).join(' ')}` : '';\n  return buildTemplate(ngComponentMetadata.selector, innerTemplate, templateInputs, templateOutputs);\n};\nexports.computesTemplateFromComponent = computesTemplateFromComponent;\n/** Stringify an object with a placholder in the circular references. */\nfunction stringifyCircular(obj) {\n  const seen = new Set();\n  return JSON.stringify(obj, (key, value) => {\n    if (typeof value === 'object' && value !== null) {\n      if (seen.has(value)) {\n        return '[Circular]';\n      }\n      seen.add(value);\n    }\n    return value;\n  });\n}\nconst createAngularInputProperty = ({\n  propertyName,\n  value,\n  argType\n}) => {\n  let templateValue;\n  switch (typeof value) {\n    case 'string':\n      templateValue = `'${value}'`;\n      break;\n    case 'object':\n      templateValue = stringifyCircular(value).replace(/'/g, '\\u2019').replace(/\\\\\"/g, '\\u201D').replace(/\"([^-\"]+)\":/g, '$1: ').replace(/\"/g, \"'\").replace(/\\u2019/g, \"\\\\'\").replace(/\\u201D/g, \"\\\\'\").split(',').join(', ');\n      break;\n    default:\n      templateValue = value;\n  }\n  return `[${propertyName}]=\"${templateValue}\"`;\n};\n/**\n * Converts a component into a template with inputs/outputs present in initial props\n *\n * @param component\n * @param initialProps\n * @param innerTemplate\n */\nconst computesTemplateSourceFromComponent = (component, initialProps, argTypes) => {\n  const ngComponentMetadata = (0, NgComponentAnalyzer_1.getComponentDecoratorMetadata)(component);\n  if (!ngComponentMetadata) {\n    return null;\n  }\n  if (!ngComponentMetadata.selector) {\n    // Allow to add renderer component when NgComponent selector is undefined\n    return `<ng-container *ngComponentOutlet=\"${component.name}\"></ng-container>`;\n  }\n  const ngComponentInputsOutputs = (0, NgComponentAnalyzer_1.getComponentInputsOutputs)(component);\n  const {\n    inputs: initialInputs,\n    outputs: initialOutputs\n  } = separateInputsOutputsAttributes(ngComponentInputsOutputs, initialProps);\n  const templateInputs = initialInputs.length > 0 ? ` ${initialInputs.map(propertyName => createAngularInputProperty({\n    propertyName,\n    value: initialProps[propertyName],\n    argType: argTypes?.[propertyName]\n  })).join(' ')}` : '';\n  const templateOutputs = initialOutputs.length > 0 ? ` ${initialOutputs.map(i => `(${i})=\"${(0, exports.formatPropInTemplate)(i)}($event)\"`).join(' ')}` : '';\n  return buildTemplate(ngComponentMetadata.selector, '', templateInputs, templateOutputs);\n};\nexports.computesTemplateSourceFromComponent = computesTemplateSourceFromComponent;\nconst buildTemplate = (selector, innerTemplate, inputs, outputs) => {\n  // https://www.w3.org/TR/2011/WD-html-markup-20110113/syntax.html#syntax-elements\n  const voidElements = ['area', 'base', 'br', 'col', 'command', 'embed', 'hr', 'img', 'input', 'keygen', 'link', 'meta', 'param', 'source', 'track', 'wbr'];\n  const firstSelector = selector.split(',')[0];\n  const templateReplacers = [[/(^.*?)(?=[,])/, '$1'], [/(^\\..+)/, 'div$1'], [/(^\\[.+?])/, 'div$1'], [/([\\w[\\]]+)(\\s*,[\\w\\s-[\\],]+)+/, `$1`], [/#([\\w-]+)/, ` id=\"$1\"`], [/((\\.[\\w-]+)+)/, (_, c) => ` class=\"${c.split`.`.join` `.trim()}\"`], [/(\\[.+?])/g, (_, a) => ` ${a.slice(1, -1)}`], [/([\\S]+)(.*)/, (template, elementSelector) => {\n    return voidElements.some(element => elementSelector === element) ? template.replace(/([\\S]+)(.*)/, `<$1$2${inputs}${outputs} />`) : template.replace(/([\\S]+)(.*)/, `<$1$2${inputs}${outputs}>${innerTemplate}</$1>`);\n  }]];\n  return templateReplacers.reduce((prevSelector, [searchValue, replacer]) => prevSelector.replace(searchValue, replacer), firstSelector);\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","computesTemplateSourceFromComponent","computesTemplateFromComponent","formatPropInTemplate","NgComponentAnalyzer_1","require","isValidIdentifier","name","test","propertyName","separateInputsOutputsAttributes","ngComponentInputsOutputs","props","inputs","filter","i","templateName","map","outputs","o","otherProps","keys","k","includes","component","initialProps","innerTemplate","ngComponentMetadata","getComponentDecoratorMetadata","getComponentInputsOutputs","selector","initialInputs","initialOutputs","templateInputs","length","join","templateOutputs","buildTemplate","stringifyCircular","obj","seen","Set","JSON","stringify","key","has","add","createAngularInputProperty","argType","templateValue","replace","split","argTypes","voidElements","firstSelector","templateReplacers","_","c","trim","a","slice","template","elementSelector","some","element","reduce","prevSelector","searchValue","replacer"],"sources":["/Users/adbyrd/Documents/Adbryd.Local/elwood.employment.local/github/ideparture/ideparture/node_modules/@storybook/angular/dist/client/angular-beta/ComputesTemplateFromComponent.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.computesTemplateSourceFromComponent = exports.computesTemplateFromComponent = exports.formatPropInTemplate = void 0;\nconst NgComponentAnalyzer_1 = require(\"./utils/NgComponentAnalyzer\");\n/**\n * Check if the name matches the criteria for a valid identifier. A valid identifier can only\n * contain letters, digits, underscores, or dollar signs. It cannot start with a digit.\n */\nconst isValidIdentifier = (name) => /^[a-zA-Z_$][a-zA-Z0-9_$]*$/.test(name);\n/**\n * Returns the property name, if it can be accessed with dot notation. If not, it returns\n * `this['propertyName']`.\n */\nconst formatPropInTemplate = (propertyName) => isValidIdentifier(propertyName) ? propertyName : `this['${propertyName}']`;\nexports.formatPropInTemplate = formatPropInTemplate;\nconst separateInputsOutputsAttributes = (ngComponentInputsOutputs, props = {}) => {\n    const inputs = ngComponentInputsOutputs.inputs\n        .filter((i) => i.templateName in props)\n        .map((i) => i.templateName);\n    const outputs = ngComponentInputsOutputs.outputs\n        .filter((o) => o.templateName in props)\n        .map((o) => o.templateName);\n    return {\n        inputs,\n        outputs,\n        otherProps: Object.keys(props).filter((k) => ![...inputs, ...outputs].includes(k)),\n    };\n};\n/**\n * Converts a component into a template with inputs/outputs present in initial props\n *\n * @param component\n * @param initialProps\n * @param innerTemplate\n */\nconst computesTemplateFromComponent = (component, initialProps, innerTemplate = '') => {\n    const ngComponentMetadata = (0, NgComponentAnalyzer_1.getComponentDecoratorMetadata)(component);\n    const ngComponentInputsOutputs = (0, NgComponentAnalyzer_1.getComponentInputsOutputs)(component);\n    if (!ngComponentMetadata.selector) {\n        // Allow to add renderer component when NgComponent selector is undefined\n        return `<ng-container *ngComponentOutlet=\"storyComponent\"></ng-container>`;\n    }\n    const { inputs: initialInputs, outputs: initialOutputs } = separateInputsOutputsAttributes(ngComponentInputsOutputs, initialProps);\n    const templateInputs = initialInputs.length > 0\n        ? ` ${initialInputs.map((i) => `[${i}]=\"${(0, exports.formatPropInTemplate)(i)}\"`).join(' ')}`\n        : '';\n    const templateOutputs = initialOutputs.length > 0\n        ? ` ${initialOutputs.map((i) => `(${i})=\"${(0, exports.formatPropInTemplate)(i)}($event)\"`).join(' ')}`\n        : '';\n    return buildTemplate(ngComponentMetadata.selector, innerTemplate, templateInputs, templateOutputs);\n};\nexports.computesTemplateFromComponent = computesTemplateFromComponent;\n/** Stringify an object with a placholder in the circular references. */\nfunction stringifyCircular(obj) {\n    const seen = new Set();\n    return JSON.stringify(obj, (key, value) => {\n        if (typeof value === 'object' && value !== null) {\n            if (seen.has(value)) {\n                return '[Circular]';\n            }\n            seen.add(value);\n        }\n        return value;\n    });\n}\nconst createAngularInputProperty = ({ propertyName, value, argType, }) => {\n    let templateValue;\n    switch (typeof value) {\n        case 'string':\n            templateValue = `'${value}'`;\n            break;\n        case 'object':\n            templateValue = stringifyCircular(value)\n                .replace(/'/g, '\\u2019')\n                .replace(/\\\\\"/g, '\\u201D')\n                .replace(/\"([^-\"]+)\":/g, '$1: ')\n                .replace(/\"/g, \"'\")\n                .replace(/\\u2019/g, \"\\\\'\")\n                .replace(/\\u201D/g, \"\\\\'\")\n                .split(',')\n                .join(', ');\n            break;\n        default:\n            templateValue = value;\n    }\n    return `[${propertyName}]=\"${templateValue}\"`;\n};\n/**\n * Converts a component into a template with inputs/outputs present in initial props\n *\n * @param component\n * @param initialProps\n * @param innerTemplate\n */\nconst computesTemplateSourceFromComponent = (component, initialProps, argTypes) => {\n    const ngComponentMetadata = (0, NgComponentAnalyzer_1.getComponentDecoratorMetadata)(component);\n    if (!ngComponentMetadata) {\n        return null;\n    }\n    if (!ngComponentMetadata.selector) {\n        // Allow to add renderer component when NgComponent selector is undefined\n        return `<ng-container *ngComponentOutlet=\"${component.name}\"></ng-container>`;\n    }\n    const ngComponentInputsOutputs = (0, NgComponentAnalyzer_1.getComponentInputsOutputs)(component);\n    const { inputs: initialInputs, outputs: initialOutputs } = separateInputsOutputsAttributes(ngComponentInputsOutputs, initialProps);\n    const templateInputs = initialInputs.length > 0\n        ? ` ${initialInputs\n            .map((propertyName) => createAngularInputProperty({\n            propertyName,\n            value: initialProps[propertyName],\n            argType: argTypes?.[propertyName],\n        }))\n            .join(' ')}`\n        : '';\n    const templateOutputs = initialOutputs.length > 0\n        ? ` ${initialOutputs.map((i) => `(${i})=\"${(0, exports.formatPropInTemplate)(i)}($event)\"`).join(' ')}`\n        : '';\n    return buildTemplate(ngComponentMetadata.selector, '', templateInputs, templateOutputs);\n};\nexports.computesTemplateSourceFromComponent = computesTemplateSourceFromComponent;\nconst buildTemplate = (selector, innerTemplate, inputs, outputs) => {\n    // https://www.w3.org/TR/2011/WD-html-markup-20110113/syntax.html#syntax-elements\n    const voidElements = [\n        'area',\n        'base',\n        'br',\n        'col',\n        'command',\n        'embed',\n        'hr',\n        'img',\n        'input',\n        'keygen',\n        'link',\n        'meta',\n        'param',\n        'source',\n        'track',\n        'wbr',\n    ];\n    const firstSelector = selector.split(',')[0];\n    const templateReplacers = [\n        [/(^.*?)(?=[,])/, '$1'],\n        [/(^\\..+)/, 'div$1'],\n        [/(^\\[.+?])/, 'div$1'],\n        [/([\\w[\\]]+)(\\s*,[\\w\\s-[\\],]+)+/, `$1`],\n        [/#([\\w-]+)/, ` id=\"$1\"`],\n        [/((\\.[\\w-]+)+)/, (_, c) => ` class=\"${c.split `.`.join ` `.trim()}\"`],\n        [/(\\[.+?])/g, (_, a) => ` ${a.slice(1, -1)}`],\n        [\n            /([\\S]+)(.*)/,\n            (template, elementSelector) => {\n                return voidElements.some((element) => elementSelector === element)\n                    ? template.replace(/([\\S]+)(.*)/, `<$1$2${inputs}${outputs} />`)\n                    : template.replace(/([\\S]+)(.*)/, `<$1$2${inputs}${outputs}>${innerTemplate}</$1>`);\n            },\n        ],\n    ];\n    return templateReplacers.reduce((prevSelector, [searchValue, replacer]) => prevSelector.replace(searchValue, replacer), firstSelector);\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}