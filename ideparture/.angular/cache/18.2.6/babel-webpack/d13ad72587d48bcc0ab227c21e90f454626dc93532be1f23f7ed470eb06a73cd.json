{"ast":null,"code":"import { ButtonComponent } from './button.component';\nconst meta = {\n  title: 'Atoms/Button',\n  component: ButtonComponent,\n  tags: ['autodocs'],\n  argTypes: {\n    styleType: {\n      control: {\n        type: 'select'\n      },\n      options: ['text-only', 'text-icon', 'filled', 'outline', 'button-icon'],\n      description: 'Defines the button style (text-only, text-icon, filled, outline, or button-icon)'\n    },\n    text: {\n      control: {\n        type: 'text'\n      },\n      description: 'Button text'\n    },\n    backgroundColor: {\n      control: 'color',\n      description: 'Optional background color for the button'\n    },\n    size: {\n      control: {\n        type: 'select'\n      },\n      options: ['small', 'medium', 'large'],\n      description: 'Button size (small, medium, or large)'\n    },\n    buttonClick: {\n      action: 'clicked'\n    }\n  },\n  args: {\n    text: 'Button',\n    styleType: 'text-only',\n    backgroundColor: 'transparent'\n  }\n};\nexport default meta;\n// Text-Only Button Story\nexport const TextOnly = {\n  args: {\n    text: 'Sign Up Here!',\n    styleType: 'text-only'\n  }\n};\n// Text + Icon Button Story\nexport const TextIcon = {\n  args: {\n    text: 'Save',\n    styleType: 'text-icon'\n  }\n};\n// Filled Button Story\nexport const Filled = {\n  args: {\n    text: 'Submit',\n    styleType: 'filled',\n    backgroundColor: '#1B2E40' // Primary color\n  }\n};\n// Outlined Button Story\nexport const Outline = {\n  args: {\n    text: 'Cancel',\n    styleType: 'outline',\n    backgroundColor: 'transparent'\n  }\n};\n// Button + Icon Story\nexport const ButtonIcon = {\n  args: {\n    text: 'Next',\n    styleType: 'button-icon'\n  }\n};\n// Large Button Story\nexport const Large = {\n  args: {\n    text: 'Large Button',\n    size: 'large',\n    styleType: 'filled'\n  }\n};\n// Small Button Story\nexport const Small = {\n  args: {\n    text: 'Small Button',\n    size: 'small',\n    styleType: 'text-only'\n  }\n};","map":{"version":3,"names":["ButtonComponent","meta","title","component","tags","argTypes","styleType","control","type","options","description","text","backgroundColor","size","buttonClick","action","args","TextOnly","TextIcon","Filled","Outline","ButtonIcon","Large","Small"],"sources":["/Users/adbyrd/Documents/clients/elwood.berry/github/ideparture/ideparture/src/app/ui-library/atoms/button/button.stories.ts"],"sourcesContent":["import { ButtonComponent } from './button.component';\nconst meta = {\n    title: 'Atoms/Button',\n    component: ButtonComponent,\n    tags: ['autodocs'],\n    argTypes: {\n        styleType: {\n            control: { type: 'select' },\n            options: ['text-only', 'text-icon', 'filled', 'outline', 'button-icon'],\n            description: 'Defines the button style (text-only, text-icon, filled, outline, or button-icon)',\n        },\n        text: {\n            control: { type: 'text' },\n            description: 'Button text',\n        },\n        backgroundColor: {\n            control: 'color',\n            description: 'Optional background color for the button',\n        },\n        size: {\n            control: { type: 'select' },\n            options: ['small', 'medium', 'large'],\n            description: 'Button size (small, medium, or large)',\n        },\n        buttonClick: { action: 'clicked' },\n    },\n    args: {\n        text: 'Button',\n        styleType: 'text-only',\n        backgroundColor: 'transparent',\n    },\n};\nexport default meta;\n// Text-Only Button Story\nexport const TextOnly = {\n    args: {\n        text: 'Sign Up Here!',\n        styleType: 'text-only',\n    },\n};\n// Text + Icon Button Story\nexport const TextIcon = {\n    args: {\n        text: 'Save',\n        styleType: 'text-icon',\n    },\n};\n// Filled Button Story\nexport const Filled = {\n    args: {\n        text: 'Submit',\n        styleType: 'filled',\n        backgroundColor: '#1B2E40', // Primary color\n    },\n};\n// Outlined Button Story\nexport const Outline = {\n    args: {\n        text: 'Cancel',\n        styleType: 'outline',\n        backgroundColor: 'transparent',\n    },\n};\n// Button + Icon Story\nexport const ButtonIcon = {\n    args: {\n        text: 'Next',\n        styleType: 'button-icon',\n    },\n};\n// Large Button Story\nexport const Large = {\n    args: {\n        text: 'Large Button',\n        size: 'large',\n        styleType: 'filled',\n    },\n};\n// Small Button Story\nexport const Small = {\n    args: {\n        text: 'Small Button',\n        size: 'small',\n        styleType: 'text-only',\n    },\n};\n"],"mappings":"AAAA,SAASA,eAAe,QAAQ,oBAAoB;AACpD,MAAMC,IAAI,GAAG;EACTC,KAAK,EAAE,cAAc;EACrBC,SAAS,EAAEH,eAAe;EAC1BI,IAAI,EAAE,CAAC,UAAU,CAAC;EAClBC,QAAQ,EAAE;IACNC,SAAS,EAAE;MACPC,OAAO,EAAE;QAAEC,IAAI,EAAE;MAAS,CAAC;MAC3BC,OAAO,EAAE,CAAC,WAAW,EAAE,WAAW,EAAE,QAAQ,EAAE,SAAS,EAAE,aAAa,CAAC;MACvEC,WAAW,EAAE;IACjB,CAAC;IACDC,IAAI,EAAE;MACFJ,OAAO,EAAE;QAAEC,IAAI,EAAE;MAAO,CAAC;MACzBE,WAAW,EAAE;IACjB,CAAC;IACDE,eAAe,EAAE;MACbL,OAAO,EAAE,OAAO;MAChBG,WAAW,EAAE;IACjB,CAAC;IACDG,IAAI,EAAE;MACFN,OAAO,EAAE;QAAEC,IAAI,EAAE;MAAS,CAAC;MAC3BC,OAAO,EAAE,CAAC,OAAO,EAAE,QAAQ,EAAE,OAAO,CAAC;MACrCC,WAAW,EAAE;IACjB,CAAC;IACDI,WAAW,EAAE;MAAEC,MAAM,EAAE;IAAU;EACrC,CAAC;EACDC,IAAI,EAAE;IACFL,IAAI,EAAE,QAAQ;IACdL,SAAS,EAAE,WAAW;IACtBM,eAAe,EAAE;EACrB;AACJ,CAAC;AACD,eAAeX,IAAI;AACnB;AACA,OAAO,MAAMgB,QAAQ,GAAG;EACpBD,IAAI,EAAE;IACFL,IAAI,EAAE,eAAe;IACrBL,SAAS,EAAE;EACf;AACJ,CAAC;AACD;AACA,OAAO,MAAMY,QAAQ,GAAG;EACpBF,IAAI,EAAE;IACFL,IAAI,EAAE,MAAM;IACZL,SAAS,EAAE;EACf;AACJ,CAAC;AACD;AACA,OAAO,MAAMa,MAAM,GAAG;EAClBH,IAAI,EAAE;IACFL,IAAI,EAAE,QAAQ;IACdL,SAAS,EAAE,QAAQ;IACnBM,eAAe,EAAE,SAAS,CAAE;EAChC;AACJ,CAAC;AACD;AACA,OAAO,MAAMQ,OAAO,GAAG;EACnBJ,IAAI,EAAE;IACFL,IAAI,EAAE,QAAQ;IACdL,SAAS,EAAE,SAAS;IACpBM,eAAe,EAAE;EACrB;AACJ,CAAC;AACD;AACA,OAAO,MAAMS,UAAU,GAAG;EACtBL,IAAI,EAAE;IACFL,IAAI,EAAE,MAAM;IACZL,SAAS,EAAE;EACf;AACJ,CAAC;AACD;AACA,OAAO,MAAMgB,KAAK,GAAG;EACjBN,IAAI,EAAE;IACFL,IAAI,EAAE,cAAc;IACpBE,IAAI,EAAE,OAAO;IACbP,SAAS,EAAE;EACf;AACJ,CAAC;AACD;AACA,OAAO,MAAMiB,KAAK,GAAG;EACjBP,IAAI,EAAE;IACFL,IAAI,EAAE,cAAc;IACpBE,IAAI,EAAE,OAAO;IACbP,SAAS,EAAE;EACf;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}