{"ast":null,"code":"/**\n * BUTTON\n * An Atom.\n *\n * iDeparture Design System v.3.0.1\n */\nimport { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./button.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./button.component.css?ngResource\";\nimport { Component, EventEmitter, Output, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgIconsModule, provideIcons } from '@ng-icons/core';\nimport { heroUsers } from '@ng-icons/heroicons/outline'; // Import entire icon set\nlet ButtonComponent = class ButtonComponent {\n  buttonClick = new EventEmitter();\n  text = '';\n  icon = null;\n  styleType = 'text-only';\n  // Dynamic Classes for the Button\n  get buttonClasses() {\n    return {\n      'w-full text-left text-accent-500 bg-transparent hover:text-accent-300': this.styleType === 'text-only',\n      'flex items-center justify-center bg-secondary-600 hover:bg-secondary-500 text-white font-bold py-1 px-6 rounded transition-all': this.styleType === 'filled',\n      'border border-accent-500 hover:bg-accent-500 hover:text-white': this.styleType === 'outline',\n      'flex items-center': this.styleType === 'text-icon'\n    };\n  }\n  static propDecorators = {\n    buttonClick: [{\n      type: Output\n    }],\n    text: [{\n      type: Input\n    }],\n    icon: [{\n      type: Input\n    }],\n    styleType: [{\n      type: Input\n    }]\n  };\n};\nButtonComponent = __decorate([Component({\n  selector: 'app-button',\n  standalone: true,\n  imports: [CommonModule, NgIconsModule],\n  providers: [provideIcons({\n    heroUsers\n  })],\n  // Provide all Heroicons\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], ButtonComponent);\nexport { ButtonComponent };","map":{"version":3,"names":["__decorate","__NG_CLI_RESOURCE__0","__NG_CLI_RESOURCE__1","Component","EventEmitter","Output","Input","CommonModule","NgIconsModule","provideIcons","heroUsers","ButtonComponent","buttonClick","text","icon","styleType","buttonClasses","propDecorators","type","selector","standalone","imports","providers","template","styles"],"sources":["/Users/adbyrd/Documents/clients/elwood.berry/github/ideparture/ideparture/src/app/ui-library/atoms/button/button.component.ts"],"sourcesContent":["/**\n * BUTTON\n * An Atom.\n *\n * iDeparture Design System v.3.0.1\n */\nimport { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./button.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./button.component.css?ngResource\";\nimport { Component, EventEmitter, Output, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgIconsModule, provideIcons } from '@ng-icons/core';\nimport { heroUsers } from '@ng-icons/heroicons/outline'; // Import entire icon set\nlet ButtonComponent = class ButtonComponent {\n    buttonClick = new EventEmitter();\n    text = '';\n    icon = null;\n    styleType = 'text-only';\n    // Dynamic Classes for the Button\n    get buttonClasses() {\n        return {\n            'w-full text-left text-accent-500 bg-transparent hover:text-accent-300': this.styleType === 'text-only',\n            'flex items-center justify-center bg-secondary-600 hover:bg-secondary-500 text-white font-bold py-1 px-6 rounded transition-all': this.styleType === 'filled',\n            'border border-accent-500 hover:bg-accent-500 hover:text-white': this.styleType === 'outline',\n            'flex items-center': this.styleType === 'text-icon',\n        };\n    }\n    static propDecorators = {\n        buttonClick: [{ type: Output }],\n        text: [{ type: Input }],\n        icon: [{ type: Input }],\n        styleType: [{ type: Input }]\n    };\n};\nButtonComponent = __decorate([\n    Component({\n        selector: 'app-button',\n        standalone: true,\n        imports: [CommonModule, NgIconsModule],\n        providers: [provideIcons({ heroUsers })], // Provide all Heroicons\n        template: __NG_CLI_RESOURCE__0,\n        styles: [__NG_CLI_RESOURCE__1]\n    })\n], ButtonComponent);\nexport { ButtonComponent };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,UAAU,QAAQ,OAAO;AAClC,OAAOC,oBAAoB,MAAM,oCAAoC;AACrE,OAAOC,oBAAoB,MAAM,mCAAmC;AACpE,SAASC,SAAS,EAAEC,YAAY,EAAEC,MAAM,EAAEC,KAAK,QAAQ,eAAe;AACtE,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,aAAa,EAAEC,YAAY,QAAQ,gBAAgB;AAC5D,SAASC,SAAS,QAAQ,6BAA6B,CAAC,CAAC;AACzD,IAAIC,eAAe,GAAG,MAAMA,eAAe,CAAC;EACxCC,WAAW,GAAG,IAAIR,YAAY,CAAC,CAAC;EAChCS,IAAI,GAAG,EAAE;EACTC,IAAI,GAAG,IAAI;EACXC,SAAS,GAAG,WAAW;EACvB;EACA,IAAIC,aAAaA,CAAA,EAAG;IAChB,OAAO;MACH,uEAAuE,EAAE,IAAI,CAACD,SAAS,KAAK,WAAW;MACvG,gIAAgI,EAAE,IAAI,CAACA,SAAS,KAAK,QAAQ;MAC7J,+DAA+D,EAAE,IAAI,CAACA,SAAS,KAAK,SAAS;MAC7F,mBAAmB,EAAE,IAAI,CAACA,SAAS,KAAK;IAC5C,CAAC;EACL;EACA,OAAOE,cAAc,GAAG;IACpBL,WAAW,EAAE,CAAC;MAAEM,IAAI,EAAEb;IAAO,CAAC,CAAC;IAC/BQ,IAAI,EAAE,CAAC;MAAEK,IAAI,EAAEZ;IAAM,CAAC,CAAC;IACvBQ,IAAI,EAAE,CAAC;MAAEI,IAAI,EAAEZ;IAAM,CAAC,CAAC;IACvBS,SAAS,EAAE,CAAC;MAAEG,IAAI,EAAEZ;IAAM,CAAC;EAC/B,CAAC;AACL,CAAC;AACDK,eAAe,GAAGX,UAAU,CAAC,CACzBG,SAAS,CAAC;EACNgB,QAAQ,EAAE,YAAY;EACtBC,UAAU,EAAE,IAAI;EAChBC,OAAO,EAAE,CAACd,YAAY,EAAEC,aAAa,CAAC;EACtCc,SAAS,EAAE,CAACb,YAAY,CAAC;IAAEC;EAAU,CAAC,CAAC,CAAC;EAAE;EAC1Ca,QAAQ,EAAEtB,oBAAoB;EAC9BuB,MAAM,EAAE,CAACtB,oBAAoB;AACjC,CAAC,CAAC,CACL,EAAES,eAAe,CAAC;AACnB,SAASA,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}